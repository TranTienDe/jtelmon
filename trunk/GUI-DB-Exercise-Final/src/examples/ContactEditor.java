
package examples;

@SuppressWarnings("CallToThreadDumpStack")

public class ContactEditor extends javax.swing.JFrame {
    
    /**
     * Creates new form ContactEditor
     */

    public ContactEditor() {
        initComponents();

        try {
            jDBCRowSet1.setCommand("select * from contacts");
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jDBCRowSet1.setDriver("org.postgresql.Driver");
        try {
            jDBCRowSet1.setUrl("jdbc:postgresql://ftp.pangram.ro:5432/contact_database");
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jDBCRowSet1.setUsername("postgres");

        try {
            jDBCRowSet1.execute();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }

        contactsModel.setRowSet(jDBCRowSet1);

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        details = new javax.swing.JDialog();
        namePanel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        nicknameLabel = new javax.swing.JLabel();
        nicknameField = new javax.swing.JTextField();
        displayFormatLabel = new javax.swing.JLabel();
        displayFormat = new javax.swing.JComboBox();
        emailPanel = new javax.swing.JPanel();
        emailLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        listScrollPane = new javax.swing.JScrollPane();
        emailsList = new javax.swing.JList();
        addEmail = new javax.swing.JButton();
        editEmail = new javax.swing.JButton();
        removeEmail = new javax.swing.JButton();
        mailFormatLabel = new javax.swing.JLabel();
        htmlChoice = new javax.swing.JRadioButton();
        plainTextChoice = new javax.swing.JRadioButton();
        customChoice = new javax.swing.JRadioButton();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jDBCRowSet1 = new examples.JDBCRowSet();
        contactsModel = new examples.ContactsModel();
        rowSetTableModel1 = new examples.RowSetTableModel();
        contactsLabel = new javax.swing.JLabel();
        contactTablePane = new javax.swing.JScrollPane();
        contactTable = new javax.swing.JTable();
        editContact = new javax.swing.JButton();
        addContact = new javax.swing.JButton();
        removeContact = new javax.swing.JButton();
        close = new javax.swing.JButton();

        details.setTitle("Contact Details");
        details.setModal(true);

        namePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Name "));

        firstNameLabel.setText("First Name:");

        firstNameField.setText("John");

        lastNameLabel.setText("Last Name:");

        lastNameField.setText("Guy");

        titleLabel.setText("Title:");

        titleField.setText("Prof, DrSC");

        nicknameLabel.setText("Nickname:");

        nicknameField.setText("gui-master");

        displayFormatLabel.setText("Display Format:");

        displayFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<nickname>", "<first name>", "<first name><last name>", "<last name><first name>" }));

        org.jdesktop.layout.GroupLayout namePanelLayout = new org.jdesktop.layout.GroupLayout(namePanel);
        namePanel.setLayout(namePanelLayout);
        namePanelLayout.setHorizontalGroup(
            namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(namePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(displayFormatLabel)
                    .add(titleLabel)
                    .add(firstNameLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(namePanelLayout.createSequentialGroup()
                        .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(titleField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, firstNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(lastNameLabel)
                            .add(nicknameLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lastNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .add(nicknameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)))
                    .add(displayFormat, 0, 335, Short.MAX_VALUE))
                .addContainerGap())
        );
        namePanelLayout.setVerticalGroup(
            namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(namePanelLayout.createSequentialGroup()
                .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(firstNameLabel)
                    .add(lastNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(firstNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lastNameLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(titleLabel)
                    .add(nicknameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(nicknameLabel)
                    .add(titleField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(namePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(displayFormatLabel)
                    .add(displayFormat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        emailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" E-mail "));

        emailLabel.setText("E-mail Address:");

        emailsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                emailsListValueChanged(evt);
            }
        });
        listScrollPane.setViewportView(emailsList);

        addEmail.setText("Add");
        addEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmailActionPerformed(evt);
            }
        });

        editEmail.setText("Edit");
        editEmail.setEnabled(false);
        editEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmailActionPerformed(evt);
            }
        });

        removeEmail.setText("Remove");
        removeEmail.setEnabled(false);
        removeEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEmailActionPerformed(evt);
            }
        });

        mailFormatLabel.setText("Mail Format:");

        buttonGroup1.add(htmlChoice);
        htmlChoice.setSelected(true);
        htmlChoice.setText("HTML");
        htmlChoice.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        htmlChoice.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup1.add(plainTextChoice);
        plainTextChoice.setText("Plain Text");
        plainTextChoice.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        plainTextChoice.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup1.add(customChoice);
        customChoice.setText("Custom");
        customChoice.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        customChoice.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout emailPanelLayout = new org.jdesktop.layout.GroupLayout(emailPanel);
        emailPanel.setLayout(emailPanelLayout);
        emailPanelLayout.setHorizontalGroup(
            emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(emailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(emailPanelLayout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(htmlChoice)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(plainTextChoice)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(customChoice))
                    .add(emailPanelLayout.createSequentialGroup()
                        .add(emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(emailPanelLayout.createSequentialGroup()
                                .add(emailLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(emailField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                            .add(listScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(editEmail)
                            .add(addEmail)
                            .add(removeEmail)))
                    .add(mailFormatLabel))
                .addContainerGap())
        );

        emailPanelLayout.linkSize(new java.awt.Component[] {addEmail, editEmail, removeEmail}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        emailPanelLayout.setVerticalGroup(
            emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(emailPanelLayout.createSequentialGroup()
                .add(emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(emailLabel)
                    .add(emailField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(addEmail))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(emailPanelLayout.createSequentialGroup()
                        .add(editEmail)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeEmail))
                    .add(listScrollPane, 0, 144, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mailFormatLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(emailPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(htmlChoice)
                    .add(plainTextChoice)
                    .add(customChoice))
                .addContainerGap())
        );

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout detailsLayout = new org.jdesktop.layout.GroupLayout(details.getContentPane());
        details.getContentPane().setLayout(detailsLayout);
        detailsLayout.setHorizontalGroup(
            detailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, detailsLayout.createSequentialGroup()
                .addContainerGap()
                .add(detailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, emailPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, namePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(detailsLayout.createSequentialGroup()
                        .add(okButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton)))
                .addContainerGap())
        );

        detailsLayout.linkSize(new java.awt.Component[] {cancelButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        detailsLayout.setVerticalGroup(
            detailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(detailsLayout.createSequentialGroup()
                .addContainerGap()
                .add(namePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(emailPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(detailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap())
        );

        jDBCRowSet1.setDriver("");
        jDBCRowSet1.setUsername("");

        contactsModel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                contactsModelPropertyChange(evt);
            }
        });

        rowSetTableModel1.setRowSet(jDBCRowSet1);
        rowSetTableModel1.setVisibleColumns(new String[] {"NICKNAME", "FIRST_NAME", "LAST_NAME"});

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("E-mail Contacts");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        contactsLabel.setFont(new java.awt.Font("Tahoma", 1, 18));
        contactsLabel.setText("Contacts");

        contactTable.setModel(rowSetTableModel1);
        contactTable.setSelectionModel(contactsModel.getContactSelection());
        contactTablePane.setViewportView(contactTable);

        editContact.setText("Edit");
        editContact.setEnabled(false);
        editContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editContactActionPerformed(evt);
            }
        });

        addContact.setText("Add");
        addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactActionPerformed(evt);
            }
        });

        removeContact.setText("Remove");
        removeContact.setEnabled(false);
        removeContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeContactActionPerformed(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(contactTablePane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(close)
                            .add(addContact)
                            .add(editContact)
                            .add(removeContact)))
                    .add(contactsLabel))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {addContact, close, editContact, removeContact}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(contactsLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(addContact)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(editContact)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeContact)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 253, Short.MAX_VALUE)
                        .add(close))
                    .add(contactTablePane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void contactsModelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_contactsModelPropertyChange
        editContact.setEnabled(contactsModel.isEditingEnabled());
        removeContact.setEnabled(contactsModel.isRemovalEnabled());
    }//GEN-LAST:event_contactsModelPropertyChange

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        contactsModel.updateContact(firstNameField.getText(), lastNameField.getText(),
                titleField.getText(), nicknameField.getText(), displayFormat.getSelectedIndex(),
                htmlChoice.isSelected() ? 0 : (plainTextChoice.isSelected() ? 1 : 2),
                ((javax.swing.DefaultListModel)emailsList.getModel()).toArray());
        details.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        details.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    private void emailsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_emailsListValueChanged
        editEmail.setEnabled(emailsList.getSelectedIndex() != -1);
        removeEmail.setEnabled(emailsList.getSelectedIndex() != -1);
        emailField.setText((String)emailsList.getSelectedValue());
    }//GEN-LAST:event_emailsListValueChanged
    
    private void removeEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEmailActionPerformed
        ((javax.swing.DefaultListModel)emailsList.getModel()).removeElementAt(emailsList.getSelectedIndex());
    }//GEN-LAST:event_removeEmailActionPerformed
    
    private void editEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEmailActionPerformed
        ((javax.swing.DefaultListModel)emailsList.getModel()).setElementAt(emailField.getText(),
                emailsList.getSelectedIndex());
    }//GEN-LAST:event_editEmailActionPerformed
    
    private void addEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmailActionPerformed
        ((javax.swing.DefaultListModel)emailsList.getModel()).addElement(emailField.getText());
    }//GEN-LAST:event_addEmailActionPerformed
            
    private void removeContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeContactActionPerformed
        contactsModel.removeContact();
    }//GEN-LAST:event_removeContactActionPerformed
    
    private void addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactActionPerformed
        showDetailDialog(true);
    }//GEN-LAST:event_addContactActionPerformed
    
    private void editContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editContactActionPerformed
        showDetailDialog(false);
    }//GEN-LAST:event_editContactActionPerformed
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        contactsModel.dispose(); // releases resources held by the model (like DB connection)
        System.exit(0);  // exists the application
    }//GEN-LAST:event_formWindowClosing
    
    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        contactsModel.dispose(); // releases resources held by the model (like DB connection)
        System.exit(0);  // exists the application
    }//GEN-LAST:event_closeActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactEditor().setVisible(true);
            }
        });
    }
    
    private void showDetailDialog(boolean inserting) {
        contactsModel.setInsertMode(inserting);
        firstNameField.setText(contactsModel.getFirstName());
        lastNameField.setText(contactsModel.getLastName());
        titleField.setText(contactsModel.getTitle());
        nicknameField.setText(contactsModel.getNickname());
        displayFormat.setSelectedIndex(contactsModel.getDisplayFormat());
        emailField.setText("");
        switch (contactsModel.getMailFormat()) {
            case 0: htmlChoice.setSelected(true); break;
            case 1: plainTextChoice.setSelected(true); break;
            case 2: customChoice.setSelected(true); break;
        }
        javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();
        Object[] mails = contactsModel.getEmails();
        for (int i=0; i<mails.length; i++) listModel.addElement(mails[i]);
        emailsList.setModel(listModel);
        details.pack();
        details.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addContact;
    private javax.swing.JButton addEmail;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton close;
    private javax.swing.JTable contactTable;
    private javax.swing.JScrollPane contactTablePane;
    private javax.swing.JLabel contactsLabel;
    private examples.ContactsModel contactsModel;
    private javax.swing.JRadioButton customChoice;
    private javax.swing.JDialog details;
    private javax.swing.JComboBox displayFormat;
    private javax.swing.JLabel displayFormatLabel;
    private javax.swing.JButton editContact;
    private javax.swing.JButton editEmail;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JPanel emailPanel;
    private javax.swing.JList emailsList;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JRadioButton htmlChoice;
    private examples.JDBCRowSet jDBCRowSet1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JLabel mailFormatLabel;
    private javax.swing.JPanel namePanel;
    private javax.swing.JTextField nicknameField;
    private javax.swing.JLabel nicknameLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JRadioButton plainTextChoice;
    private javax.swing.JButton removeContact;
    private javax.swing.JButton removeEmail;
    private examples.RowSetTableModel rowSetTableModel1;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
    
}
