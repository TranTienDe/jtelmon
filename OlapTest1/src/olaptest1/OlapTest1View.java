/*
 * OlapTest1View.java
 */

package olaptest1;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

import org.palo.api.Connection;
import org.palo.api.Database;
import org.palo.api.Dimension;
import org.palo.api.Cube;
import org.palo.api.ConnectionFactory;
import org.palo.api.Element; 
//import org.palo.api.Consolidation;

/**
 * The application's main frame.
 */
public class OlapTest1View extends FrameView {

    public OlapTest1View(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = OlapTest1App.getApplication().getMainFrame();
            aboutBox = new OlapTest1AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        OlapTest1App.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        travelPUEntityManager = javax.persistence.Persistence.createEntityManagerFactory("travelPU").createEntityManager();
        carrentalQuery = travelPUEntityManager.createQuery("SELECT c FROM Carrental c");
        carrentalList = carrentalQuery.getResultList();
        virPUEntityManager = javax.persistence.Persistence.createEntityManagerFactory("virPU").createEntityManager();
        employeeQuery = virPUEntityManager.createQuery("SELECT e FROM Employee e");
        employeeList = employeeQuery.getResultList();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(olaptest1.OlapTest1App.class).getContext().getResourceMap(OlapTest1View.class);
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB1ap(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(olaptest1.OlapTest1App.class).getContext().getActionMap(OlapTest1View.class, this);
        jButton2.setAction(actionMap.get("panSales")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jXTable1.setName("jXTable1"); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, employeeList, jXTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${firstname}"));
        columnBinding.setColumnName("Firstname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lastname}"));
        columnBinding.setColumnName("Lastname");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jXTable1);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        menuBar.add(jMenu1);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 256, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jB1ap(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB1ap
        // TODO add your handling code here:
        
        String COORDINATES[] = {
        "Desktop L",
        "Germany",
        "Jan",
        "2003",
        "Budget",
        "Units" };

        Connection connection = ConnectionFactory.getInstance().newConnection("127.0.0.1", "7777", "admin", "admin");
        Database db = connection.getDatabaseByName("Demo");
        Cube cube = db.getCubeByName("Sales");
        Object v0 = cube.getData(new String[] {"Desktop L", "Germany", "Jan", "2003", "Budget", "Units" });
        Object v1 = cube.getData(new Element[] {
            cube.getDimensionAt(0).getElementByName("Server Dual C"),
            cube.getDimensionAt(1).getElementByName("Italy"),
            cube.getDimensionAt(2).getElementByName("Dec"),
            cube.getDimensionAt(3).getElementByName("2006"),
            cube.getDimensionAt(4).getElementByName("Actual"),
            cube.getDimensionAt(5).getElementByName("Units"),
        });
        String s0 = v0.toString();
        String s1 = v1.toString();
        System.out.println(s0);
        System.out.println(s1);
        
        Object data;
        data = cube.getData(COORDINATES);
        System.err.println("got data: " + data);
        System.err.println("setting data...");
        cube.setData(COORDINATES, new Double(113));
        data = cube.getData(COORDINATES);
        System.err.println("got data: " + data);

        connection.disconnect();
        
    }//GEN-LAST:event_jB1ap

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // panSales_ActionPerformed

        String COORDINATES[] = {
        "Timisoara",
        "Metro",
        "2005"};

        
        Connection connection = ConnectionFactory.getInstance().newConnection("127.0.0.1", "7777", "admin", "admin");
        Database db = connection.getDatabaseByName("uou");
        Cube cube = db.getCubeByName("vanzari");
        // Object v0 = cube.getData(new String[] {"depozit", "client", "an"});
        cube.setData(COORDINATES, new Double(113.99));
        
        // http://forum.palo.net/thread.php?postid=1428
        /*
        Database db1 = connection.getDatabaseByName("whDBj");
        db1.removeCube(cube);
        Database db2 = connection.addDatabase("whDBj");
        Dimension dim1 = db2.addDimension("dimWarehouse");
        Dimension dim2 = db2.addDimension("dimYears");
        Dimension dim3 = db2.addDimension("dimCustomers");
        dim1.addElement("Timisoara", Element.ELEMENTTYPE_STRING);
        dim1.addElement("Bucuresti", Element.ELEMENTTYPE_STRING);
        dim1.addElement("Cluj", Element.ELEMENTTYPE_STRING);
        dim2.addElement("2003", Element.ELEMENTTYPE_STRING);
        dim2.addElement("2004", Element.ELEMENTTYPE_STRING);
        dim2.addElement("2005", Element.ELEMENTTYPE_STRING);
        dim3.addElement("Metro", Element.ELEMENTTYPE_STRING);
        dim3.addElement("Kaufland", Element.ELEMENTTYPE_STRING);
        dim3.addElement("Real", Element.ELEMENTTYPE_STRING);
        Cube cube2 = db2.addCube("cubeSales", db2.getDimensions());
        */
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //CreateCube_ActionPerformed
        Connection connection = ConnectionFactory.getInstance().newConnection("127.0.0.1", "7777", "admin", "admin");
        // http://forum.palo.net/thread.php?postid=1428
        //Database db1 = connection.getDatabaseByName("whDBj");
        //Cube cube = db1.getCubeByName("cubeSales");
        //db1.removeCube(cube);
        
        
        Database db2 = connection.addDatabase("PangramOLAP");
        Dimension dim1 = db2.addDimension("dimWarehouse");
        Dimension dim2 = db2.addDimension("dimYears");
        Dimension dim3 = db2.addDimension("dimCustomers");
        // dim3.SUBDIMENSION.Hierarchy ?
        
/*        
        dim1.addElement("Timisoara", Element.ELEMENTTYPE_STRING);
        dim1.addElement("Bucuresti", Element.ELEMENTTYPE_STRING);
        dim1.addElement("Cluj", Element.ELEMENTTYPE_STRING);
        dim2.addElement("2003", Element.ELEMENTTYPE_STRING);
        dim2.addElement("2004", Element.ELEMENTTYPE_STRING);
        dim2.addElement("2005", Element.ELEMENTTYPE_STRING);
        dim3.addElement("Metro", Element.ELEMENTTYPE_STRING);
        dim3.addElement("Kaufland", Element.ELEMENTTYPE_STRING);
        dim3.addElement("Real", Element.ELEMENTTYPE_STRING);
*/
        dim1.addElement("Timisoara", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("Bucuresti", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("Cluj", Element.ELEMENTTYPE_NUMERIC);
        dim2.addElement("2003", Element.ELEMENTTYPE_NUMERIC);
        dim2.addElement("2004", Element.ELEMENTTYPE_NUMERIC);
        dim2.addElement("2005", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Metro", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Kaufland", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Real", Element.ELEMENTTYPE_NUMERIC);
      
        Dimension[] dimensions = new Dimension[3];
        dimensions[0]=dim1;
        dimensions[1]=dim2;
        dimensions[2]=dim3;
               
        Cube cube = db2.addCube("cubeSales", dimensions);
        String COORDINATES[] = {"Timisoara","2004","Metro"};     
        cube.setData(COORDINATES, new Double(247.26));

        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        Connection connection = ConnectionFactory.getInstance().newConnection("127.0.0.1", "7777", "admin", "admin");
        // Database db2 = connection.getDatabaseByName("whDBj");

        Database db2 = connection.getDatabaseByName("rentabil");
        // Cube cube = db.getCubeByName("vanzari");

        
        System.err.println ("dumping database '" + db2.getName() + "' ...");
        // dumps dimensions
        for (int i = 0; i < db2.getDimensionCount(); ++i)
        {
            Dimension dimension = db2.getDimensionAt(i);
            System.err.println ("found dimension '" + dimension.getName() + "'");
        }
        
        // dumps cubes
        for (int i = 0; i < db2.getCubeCount(); ++i)
        {
            Cube cube3 = db2.getCubeAt(i);
            System.err.println ("found cube '" + cube3.getName() + "'");
            /*
            Dimension[] roots = cube3.getDimensions();
		Element[] elements_root = new Element[roots.length];
		int j=0;
		for (int k=0; k<roots.length; k++) {
			System.out.println(k + " " + roots[k].getName());
			elements_root[j++] = roots[k].getRootElements()[0];
		}
		
		for (int k=0; k<elements_root.length; k++) 
			System.out.println(elements_root[k].getName());
		cube3.setDataSplashed(elements_root, "0", Cube.SPLASHMODE_BASE_SET);
             */
        }
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
            // TODO add your handling code here:
            // creare cubRentabil2
        Connection connection = ConnectionFactory.getInstance().newConnection("127.0.0.1", "7777", "admin", "admin");
        Database db2 = connection.addDatabase("OLAPooo");
        Dimension dim1 = db2.addDimension("dimDepot");
        Dimension dim2 = db2.addDimension("dimYear");
        Dimension dim3 = db2.addDimension("dimExpense");
        // dim3.SUBDIMENSION.Hierarchy ?
        
        dim1.addElement("BACAU", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("BAIAM", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("BRASOV", Element.ELEMENTTYPE_NUMERIC);

        dim1.addElement("BUCURESTI", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("CLUJ", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("CONSTANTA", Element.ELEMENTTYPE_NUMERIC);

        dim1.addElement("CRAIOVA", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("DEVA", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("GALATI", Element.ELEMENTTYPE_NUMERIC);

        dim1.addElement("ORADEA", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("TGMURES", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("TIMISOARA", Element.ELEMENTTYPE_NUMERIC);

        dim1.addElement("RESITA", Element.ELEMENTTYPE_NUMERIC);
        dim1.addElement("SUCEAVA", Element.ELEMENTTYPE_NUMERIC);
        
        
        dim2.addElement("2007", Element.ELEMENTTYPE_NUMERIC);
        dim2.addElement("2008", Element.ELEMENTTYPE_NUMERIC);
        dim2.addElement("2009", Element.ELEMENTTYPE_NUMERIC);

        dim3.addElement("Chelt cu discountul", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu mat. Cons.", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu piese schimb", Element.ELEMENTTYPE_NUMERIC);

        dim3.addElement("Chelt de energie", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu reparatii", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu chirii", Element.ELEMENTTYPE_NUMERIC);

        dim3.addElement("Chelt de protocol", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu recl.-publicitate/deschideri", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu publicitate/curente", Element.ELEMENTTYPE_NUMERIC);
        
        dim3.addElement("Chelt cu publicitate/listari prod. Noi", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu delegatii", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu telefoane", Element.ELEMENTTYPE_NUMERIC);

        dim3.addElement("Chelt cu salarii", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu imp. si taxe", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Chelt cu combustibil", Element.ELEMENTTYPE_NUMERIC);

        dim3.addElement("diverse", Element.ELEMENTTYPE_NUMERIC);
        dim3.addElement("Alte cheltuieli", Element.ELEMENTTYPE_NUMERIC);
        
        
        Dimension[] dimensions = new Dimension[3];
        dimensions[0]=dim1;
        dimensions[1]=dim2;
        dimensions[2]=dim3;
               
        Cube cube = db2.addCube("cubeExpense", dimensions);
        String COORDINATES[] = {"TIMISOARA","2007","Chelt cu combustibil"};     
        cube.setData(COORDINATES, new Double(1224.74));
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<olaptest1.Carrental> carrentalList;
    private javax.persistence.Query carrentalQuery;
    private java.util.List<olaptest1.Employee> employeeList;
    private javax.persistence.Query employeeQuery;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.persistence.EntityManager travelPUEntityManager;
    private javax.persistence.EntityManager virPUEntityManager;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
